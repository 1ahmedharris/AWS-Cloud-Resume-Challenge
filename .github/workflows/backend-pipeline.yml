
name: backend ci/cd pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'AWS-Cloud-Resume_challenge/backend/**'  # Only run on changes to files in 'my-resume/frontend'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository
      - name: Checkout Code
        uses: actions/checkout@v4.2

      # Step 2: Run Super Linter on HTML/CSS/JSON Files
      - name: Run Linter
        uses: github/super-linter@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: false  # Ensure it fails the pipeline if thereâ€™s a lint error

      # Step 3: Upload Files as Artifact for Deploy
      - name: Upload Site Files
        uses: actions/upload-artifact@v4
        with:
          name: site-files
          path: |
            AWS-Cloud-Resume-Challenge/backend
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 1: Check out the repository again
      - name: Checkout Code
        uses: actions/checkout@v4.2

      # Step 2: Download the build artifact from the build job
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: site-files
          path: ./site-files

      # Step 3: Login 
      - name: # AWS Login
        uses: # aws/login@v2.2.0
        with:
          creds: ${{ secrets.AWS_CREDENTIALS }}

      # Step 4: Deploy Infrastructure (DNS, CDN, and Storage Blob) via IaC
      - name: Deploy Infrastructure
        run: |
          aws deployment group create --resource-group <resource-group> --template-file AWS-Cloud-Resume-Challenge/backend/mainTemplate.json

      # Step 5: Deploy Static Site to Storage Blob
      - name: Deploy Static Site to Storage Blob
        run: |
          aws storage blob upload-batch \
            --source ./site-files \
            --destination '$web' \
            --account-name ${{ account_name }}

      # Step 6: Purge CloudFront CDN Endpoint
      - name: Purge CDN Endpoint
        run: |
          aws cdn endpoint purge \
            --resource-group <-resource-group> \
            --profile-name <-cdn-profile> \
            --name <-cdn-endpoint> \
            --content-paths '/*'

  smoke-test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      # Step 1: Run Cypress Tests
      - name: Run Smoke Tests
        uses: cypress-io/github-action@v6.7.5
        with:
          config: "baseUrl=https://ahmedharrisresume.com"
          config: "baseUrl=https://ahmedharrisdevops.com"
      # Ensure Cypress tests cover key functionality and elements on site
